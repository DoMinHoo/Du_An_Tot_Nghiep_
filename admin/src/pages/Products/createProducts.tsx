import React from 'react';
import {
  Card,
  Form,
  Input,
  InputNumber,
  DatePicker,
  Upload,
  Button,
  Select,
  Row,
  Col,
  message,
} from 'antd';
import { ArrowLeftOutlined, UploadOutlined } from '@ant-design/icons';
import { useMutation, useQuery } from '@tanstack/react-query';
import { createProduct, getCategories, type Category } from '../../Services/products.service';
import { useNavigate } from 'react-router-dom';

const { TextArea } = Input;
const { Option } = Select;

const AddProductPage: React.FC = () => {
  const navigate = useNavigate();
  const [form] = Form.useForm();

  const { data: categories, isLoading, isError } = useQuery<Category[]>({
    queryKey: ['categories'],
    queryFn: getCategories,
  });

  const { mutate: createMutate, isPending } = useMutation({
    mutationFn: createProduct,
    onSuccess: () => {
      message.success('ƒê√£ th√™m s·∫£n ph·∫©m!');
      form.resetFields();
      navigate("/admin/products");
    },
    onError: () => {
      message.error('Th√™m s·∫£n ph·∫©m th·∫•t b·∫°i!');
    },
  });

  const handleFinish = (values: any) => {
    const { length, width, height } = values;
    values.dimensions = `D√†i ${length} x R·ªông ${width} x Cao ${height} cm`;
    values.flashSale_start = values.flashSale_start?.toISOString();
    values.flashSale_end = values.flashSale_end?.toISOString();

    createMutate(values);
  };

  return (
    <>
    <Button
        type="link"
        icon={<ArrowLeftOutlined />}
        onClick={() => navigate('/admin/products')}
      >
        Quay l·∫°i
      </Button>
    <Card title="‚ûï Th√™m s·∫£n ph·∫©m m·ªõi" style={{ margin: 24 }}>
      <Form
        layout="vertical"
        form={form}
        onFinish={handleFinish}
        initialValues={{ status: 'active', totalPurchased: 0 }}
      >
        <Row gutter={16}>
          {/* T√™n s·∫£n ph·∫©m */}
          <Col span={12}>
            <Form.Item
              label="T√™n s·∫£n ph·∫©m"
              name="name"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p t√™n s·∫£n ph·∫©m' }]}
            >
              <Input />
            </Form.Item>
          </Col>

          {/* Danh m·ª•c */}
          <Col span={12}>
            <Form.Item
              label="Danh m·ª•c"
              name="categoryId"
              rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn danh m·ª•c' }]}
            >
              <Select placeholder="Ch·ªçn danh m·ª•c" loading={isLoading} disabled={isLoading || isError}>
                {categories?.map(category => (
                  <Option key={category._id} value={category._id}>
                    {category.name}
                  </Option>
                ))}
              </Select>
            </Form.Item>
          </Col>

          {/* Ch·∫•t li·ªáu */}
          <Col span={12}>
            <Form.Item
              label="Ch·∫•t li·ªáu"
              name="material"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p ch·∫•t li·ªáu' }]}
            >
              <Input />
            </Form.Item>
          </Col>

          {/* K√≠ch th∆∞·ªõc (D√†i x R·ªông x Cao) */}
          <Col span={12}>
            <Form.Item label="K√≠ch th∆∞·ªõc (cm)">
              <Input.Group compact>
                <Form.Item
                  name="length"
                  noStyle
                  rules={[{ required: true, message: 'Nh·∫≠p D√†i' }]}
                >
                  <InputNumber placeholder="D√†i" min={0} style={{ width: '33.33%' }} />
                </Form.Item>
                <Form.Item
                  name="width"
                  noStyle
                  rules={[{ required: true, message: 'Nh·∫≠p R·ªông' }]}
                >
                  <InputNumber placeholder="R·ªông" min={0} style={{ width: '33.33%' }} />
                </Form.Item>
                <Form.Item
                  name="height"
                  noStyle
                  rules={[{ required: true, message: 'Nh·∫≠p Cao' }]}
                >
                  <InputNumber placeholder="Cao" min={0} style={{ width: '33.33%' }} />
                </Form.Item>
              </Input.Group>
            </Form.Item>
          </Col>

          {/* Kh·ªëi l∆∞·ª£ng */}
          <Col span={8}>
            <Form.Item
              label="Kh·ªëi l∆∞·ª£ng (kg)"
              name="weight"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p kh·ªëi l∆∞·ª£ng' }]}
            >
              <InputNumber min={0} style={{ width: '100%' }} />
            </Form.Item>
          </Col>

          {/* Tr·∫°ng th√°i */}
          <Col span={8}>
            <Form.Item
              label="Tr·∫°ng th√°i"
              name="status"
              rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn tr·∫°ng th√°i' }]}
            >
              <Select>
                <Option value="active">ƒêang b√°n</Option>
                <Option value="hidden">·∫®n</Option>
                <Option value="sold_out">H·∫øt h√†ng</Option>
              </Select>
            </Form.Item>
          </Col>

          {/* M√¥ t·∫£ ng·∫Øn */}
          <Col span={12}>
            <Form.Item
              label="M√¥ t·∫£ ng·∫Øn"
              name="descriptionShort"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p m√¥ t·∫£ ng·∫Øn' }]}
            >
              <TextArea rows={2} />
            </Form.Item>
          </Col>

          {/* M√¥ t·∫£ chi ti·∫øt */}
          <Col span={12}>
            <Form.Item label="M√¥ t·∫£ chi ti·∫øt" name="descriptionLong">
              <TextArea rows={2} />
            </Form.Item>
          </Col>

          {/* Gi√° g·ªëc */}
          <Col span={8}>
            <Form.Item
              label="Gi√° g·ªëc"
              name="price"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p gi√° b√°n' }]}
            >
              <InputNumber min={0} style={{ width: '100%' }} addonAfter="‚Ç´" />
            </Form.Item>
          </Col>

          {/* Gi√° nh·∫≠p */}
          <Col span={8}>
            <Form.Item label="Gi√° nh·∫≠p" name="importPrice">
              <InputNumber min={0} style={{ width: '100%' }} addonAfter="‚Ç´" />
            </Form.Item>
          </Col>

          {/* Gi√° khuy·∫øn m√£i */}
          <Col span={8}>
            <Form.Item label="Gi√° khuy·∫øn m√£i" name="salePrice">
              <InputNumber min={0} style={{ width: '100%' }} addonAfter="‚Ç´" />
            </Form.Item>
          </Col>

          {/* Gi√° Flash Sale */}
          <Col span={8}>
            <Form.Item label="Gi√° Flash Sale" name="flashSale_discountedPrice">
              <InputNumber min={0} style={{ width: '100%' }} addonAfter="‚Ç´" />
            </Form.Item>
          </Col>

          {/* B·∫Øt ƒë·∫ßu Flash Sale */}
          <Col span={8}>
            <Form.Item label="B·∫Øt ƒë·∫ßu Flash Sale" name="flashSale_start">
              <DatePicker style={{ width: '100%' }} showTime />
            </Form.Item>
          </Col>

          {/* K·∫øt th√∫c Flash Sale */}
          <Col span={8}>
            <Form.Item label="K·∫øt th√∫c Flash Sale" name="flashSale_end">
              <DatePicker style={{ width: '100%' }} showTime />
            </Form.Item>
          </Col>

          {/* H√¨nh ·∫£nh */}
          <Col span={24}>
            <Form.Item
              label="H√¨nh ·∫£nh"
              name="images"
              valuePropName="fileList"
              getValueFromEvent={(e) => e?.fileList}
              rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn √≠t nh·∫•t 1 ·∫£nh' }]}
            >
              <Upload listType="picture-card" beforeUpload={() => false} multiple>
                <UploadOutlined /> T·∫£i ·∫£nh
              </Upload>
            </Form.Item>
          </Col>

          {/* N√∫t L∆∞u */}
          <Col span={24}>
            <Form.Item>
              <Button type="primary" htmlType="submit" style={{ width: '100%' }} loading={isPending}>
                üíæ L∆∞u s·∫£n ph·∫©m
              </Button>
            </Form.Item>
          </Col>
        </Row>
      </Form>
    </Card>
    </>
  );
};

export default AddProductPage;
